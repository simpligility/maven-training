<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.takari.training.simple</groupId>
	<artifactId>simple-project</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>Simple Project Example</name>
	<description>
	  A simple example using Google Guice.  This example
	  accompanies the first example in the Takari Maven training
	  class.
	</description>
	<dependencies>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0-rc2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>4.0.2.RELEASE</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>io.takari.training.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-dependency-plugin</artifactId> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>copy-dependencies</id> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>copy-dependencies</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <outputDirectory>${project.build.directory}</outputDirectory> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>7</source>
					<target>7</target>
				</configuration>
			</plugin>
			<!-- <plugin> -->
			<!-- <artifactId>maven-assembly-plugin</artifactId> -->
			<!-- <version>2.4</version> -->
			<!-- <configuration> -->
			<!-- <descriptorRefs> -->
			<!-- <descriptorRef>jar-with-dependencies</descriptorRef> -->
			<!-- </descriptorRefs> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>make-assembly</id> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>single</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">

									<!-- note that the main class is set *here* -->

									<mainClass>io.takari.training.Main</mainClass>
								</transformer>
							</transformers>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- now make the jar chmod +x style executable -->
			<plugin>
				<groupId>org.skife.maven</groupId>
				<artifactId>really-executable-jar-maven-plugin</artifactId>
				<version>1.1.0</version>
				<configuration>
					<!-- value of flags will be interpolated into the java invocation -->
					<!-- as "java $flags -jar ..." -->
					<flags>-Xmx1G</flags>

					<!-- (optional) name for binary executable, if not set will just -->
					<!-- make the regular jar artifact executable -->
					<programFile>nifty-executable</programFile>

					<!-- (optional) name for a file that will define what script gets -->
					<!-- embedded into the executable jar. This can be used to -->
					<!-- override the default startup script which is -->
					<!-- `#!/bin/sh -->
					<!-- -->
					<!-- exec java " + flags + " -jar "$0" "$@" -->
					<!-- <scriptFile>src/packaging/someScript.extension</scriptFile> -->
				</configuration>

				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>really-executable-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.16</version>
			</plugin>
		</plugins>
	</reporting>
</project>
